version: '3.9'

services:
  # Frontend (React app)
  frontend:
    build: ../frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_SUPABASE_URL=${SUPABASE_URL}
      - VITE_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - VITE_AI_CORE_URL=http://localhost:8000
      - VITE_DATA_CONNECTOR_URL=http://localhost:8001
    volumes:
      - ../frontend:/app
      - /app/node_modules
    depends_on:
      - ai-core
      - data-connector
    networks:
      - ai-platform

  # AI Core Service
  ai-core:
    build: ../services/ai-core
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${SUPABASE_POSTGRES_URL:-postgresql://postgres:postgres@postgres:5432/ai_platform}
      - QDRANT_URL=http://qdrant:6333
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - ALLOWED_ORIGINS=["http://localhost:5173","http://localhost:3000"]
    volumes:
      - ../services/ai-core:/app
    depends_on:
      - qdrant
      - redis
      - postgres
    networks:
      - ai-platform

  # Data Connector Service
  data-connector:
    build: ../services/data-connector
    ports:
      - "8001:8001"
      - "1883:1883"  # MQTT
    environment:
      - DATABASE_URL=${SUPABASE_POSTGRES_URL:-postgresql://postgres:postgres@postgres:5432/ai_platform}
      - AI_CORE_URL=http://ai-core:8000
      - MQTT_BROKER=localhost
    volumes:
      - ../services/data-connector:/app
    networks:
      - ai-platform

  # Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - ai-platform

  # Cache Layer
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai-platform

  # PostgreSQL (local dev alternative to Supabase)
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=ai_platform
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ai-platform

  # Monitoring: Prometheus
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - ai-platform

  # Monitoring: Grafana
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
    volumes:
      - ./monitoring/grafana:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - ai-platform

volumes:
  qdrant_data:
  redis_data:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  ai-platform:
    driver: bridge

